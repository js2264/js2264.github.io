<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Viz on Jacques Serizay</title>
    <link>/tags/data-viz/</link>
    <description>Recent content in Data Viz on Jacques Serizay</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 26 Apr 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/data-viz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Seuratify</title>
      <link>/blog/seuratify/</link>
      <pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/blog/seuratify/</guid>
      <description>Setting the scene I’ve increasingly enjoyed looking at art through an “algorithmic” lens. What are the “hard” rules that generating a piece of art require, and can they be recapitulated using a computer?&#xA;Of course, generating more or less “random” art is always possible, for example using GAN (Generative Adverarial Networks). Such type of art has generated lots of traction recently, as shown by the incredible success of the “Belamy” family.</description>
    </item>
    <item>
      <title>generate_aRt</title>
      <link>/blog/generate_art/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/blog/generate_art/</guid>
      <description>Setting the scene Here is an attempt to do some generative art. I got a lot of inspiration from the following sources:&#xA;https://medium.com/@vitgabrhel/getting-started-with-generative-art-in-r-3bc50067d34b https://github.com/djnavarro/jasmines https://github.com/cutterkom/generativeart http://www.citizen-statistician.org/2020/05/dipping-my-toes-in-generative-art-with-my-sister/ https://www.r-bloggers.com/2020/05/generative-art-let-your-computer-design-you-a-painting/ https://flowingdata.com/2019/09/27/detailed-generative-art-in-r/ https://www.data-imaginist.com/art Some R packages for this project:&#xA;remotes::install_github(&amp;quot;thomasp85/ambient&amp;quot;) remotes::install_github(&amp;quot;cutterkom/generativeart&amp;quot;) remotes::install_github(&amp;quot;djnavarro/jasmines&amp;quot;) Loading libraries…&#xA;require(tidyverse) ## Loading required package: tidyverse ## ── Attaching packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✔ ggplot2 3.3.3 ✔ purrr 0.3.4 ## ✔ tibble 3.0.5 ✔ dplyr 1.0.3 ## ✔ tidyr 1.</description>
    </item>
    <item>
      <title>Animated plots and single-cell RNA-seq analysis</title>
      <link>/blog/gganimate/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/blog/gganimate/</guid>
      <description>I know I am probably being over-enthousiastic about it, but I keep learning about ggplot2 features and I can’t get enough of it. Lately, I have discovered the possibilities of animating ggplots based on aesthetics of interest, and as usual, this is as simple as a single line of code…&#xA;In this post, I will rely on some single-cell RNA-seq data (from a 10X Genomics sequencing run) containing gene expression for ~500 mouse cycling Radial Glial Progenitors (RGPs).</description>
    </item>
  </channel>
</rss>
